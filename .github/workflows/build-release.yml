name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: Test
      run: dotnet test --no-build --verbosity normal
      continue-on-error: true
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: plugin-dll
        path: bin/Release/net8.0/TMDBintros.dll
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Build Release
      run: |
        dotnet restore
        dotnet build --configuration Release
        
    - name: Create Plugin Package
      run: |
        mkdir -p package
        cp bin/Release/net8.0/TMDBintros.dll package/
        cd package && zip -r ../TMDBintros.zip . && cd ..
        
    - name: Calculate SHA256
      id: sha256
      run: |
        SHA256=$(sha256sum TMDBintros.zip | cut -d' ' -f1)
        echo "checksum=$SHA256" >> $GITHUB_OUTPUT
        echo "SHA256: $SHA256"
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Changes in this Release
          
          - See [CHANGELOG.md](CHANGELOG.md) for detailed changes
          
          ## Installation
          
          1. Download `TMDBintros.zip` from the assets below
          2. Extract the zip file
          3. Copy `TMDBintros.dll` to your Jellyfin plugins directory
          4. Install yt-dlp: `sudo apt install yt-dlp` (Linux) or `winget install yt-dlp` (Windows)
          5. Restart Jellyfin
          6. Configure the plugin with your TMDB API key
          
          **Or use as Custom Repository:**
          Add `https://raw.githubusercontent.com/kernastra/TMDBintros/main/manifest.json` to Jellyfin's custom repositories.
          
          ## SHA256 Checksum
          ```
          ${{ steps.sha256.outputs.checksum }}
          ```
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: TMDBintros.zip
        asset_name: TMDBintros.zip
        asset_content_type: application/zip
